================================================================================
empty
================================================================================

--------------------------------------------------------------------------------

(source_file)

================================================================================
assignment
================================================================================

foo := "abc"

--------------------------------------------------------------------------------

(source_file
  (assignment
    (identifier)
    (expression
      (value
        (string)))))

================================================================================
expression
================================================================================

foo := "abc" + 'def'

--------------------------------------------------------------------------------

(source_file
  (assignment
    (identifier)
    (expression
      (value
        (string))
      (value
        (string)))))

================================================================================
paths
================================================================================

relative := "abc" / 'def'
absolute := / "abc"
combined := "foo" / bar() / baz

--------------------------------------------------------------------------------

(source_file
  (assignment
    (identifier)
    (expression
      (value
        (string))
      (value
        (string))))
  (assignment
    (identifier)
    (expression
      (value
        (string))))
  (assignment
    (identifier)
    (expression
      (value
        (string))
      (value
        (function_call
          (identifier)))
      (value
        (identifier)))))

================================================================================
basic strings
================================================================================

foo := "a"
bar := "b
  c
"
baz := "a\"\t"

--------------------------------------------------------------------------------

(source_file
  (assignment
    (identifier)
    (expression
      (value
        (string))))
  (assignment
    (identifier)
    (expression
      (value
        (string))))
  (assignment
    (identifier)
    (expression
      (value
        (string
          (escape_sequence)
          (escape_sequence))))))

================================================================================
escape newlines
================================================================================

foo := "a\
b"

--------------------------------------------------------------------------------

(source_file
  (assignment
    (identifier)
    (expression
      (value
        (string
          (escape_sequence))))))

================================================================================
indented basic strings
================================================================================

foo := """a"""
bar:= """b
  c
"""
baz := """
abc \t
def \"
"""

--------------------------------------------------------------------------------

(source_file
  (assignment
    (identifier)
    (expression
      (value
        (string))))
  (assignment
    (identifier)
    (expression
      (value
        (string))))
  (assignment
    (identifier)
    (expression
      (value
        (string
          (escape_sequence)
          (escape_sequence))))))

================================================================================
raw strings
================================================================================

foo := 'a'
bar := 'b
  c
'
baz := 'a\"\t'

--------------------------------------------------------------------------------

(source_file
  (assignment
    (identifier)
    (expression
      (value
        (string))))
  (assignment
    (identifier)
    (expression
      (value
        (string))))
  (assignment
    (identifier)
    (expression
      (value
        (string)))))

================================================================================
indented raw strings
================================================================================

foo := '''a'''
bar:= '''b
  c
'''
  baz := ''''
  abc \t
  def \"
'''

--------------------------------------------------------------------------------

(source_file
  (assignment
    (identifier)
    (expression
      (value
        (string))))
  (assignment
    (identifier)
    (expression
      (value
        (string))))
  (assignment
    (identifier)
    (expression
      (value
        (string)))))

================================================================================
backticks
================================================================================

foo := `echo hi`
bar := `echo hi
  echo bye
`

--------------------------------------------------------------------------------

(source_file
  (assignment
    (identifier)
    (expression
      (value
        (external_command
          (command_body)))))
  (assignment
    (identifier)
    (expression
      (value
        (external_command
          (command_body))))))

================================================================================
indented backticks
================================================================================

foo := ```echo hi```
bar := ```
echo bye  
```
--------------------------------------------------------------------------------

(source_file
  (assignment
    (identifier)
    (expression
      (value
        (external_command
          (command_body)))))
  (assignment
    (identifier)
    (expression
      (value
        (external_command
          (command_body))))))

================================================================================
if
================================================================================

foo := if bar == baz { qux } else { quux }

--------------------------------------------------------------------------------

(source_file
  (assignment
    (identifier)
    (expression
      (if_expression
        (condition
          (expression
            (value
              (identifier)))
          (expression
            (value
              (identifier))))
        (expression
          (value
            (identifier)))
        (else_clause
          (expression
            (value
              (identifier))))))))

================================================================================
else if
================================================================================

foo := if a == "x" {
  "val"
} else if "1" != "2" {
  foo_fn("val")
} else if "3" == "4" {
  if some_bool { val }
} else { val }

--------------------------------------------------------------------------------

(source_file
  (assignment
    (identifier)
    (expression
      (if_expression
        (condition
          (expression
            (value
              (identifier)))
          (expression
            (value
              (string))))
        (expression
          (value
            (string)))
        (else_if_clause
          (condition
            (expression
              (value
                (string)))
            (expression
              (value
                (string))))
          (expression
            (value
              (function_call
                (identifier)
                (sequence
                  (expression
                    (value
                      (string))))))))
        (else_if_clause
          (condition
            (expression
              (value
                (string)))
            (expression
              (value
                (string))))
          (expression
            (if_expression
              (condition
                (expression
                  (value
                    (identifier))))
              (expression
                (value
                  (identifier))))))
        (else_clause
          (expression
            (value
              (identifier))))))))

================================================================================
function
================================================================================

foo := some_fn("param1", param2)

--------------------------------------------------------------------------------

(source_file
  (assignment
    (identifier)
    (expression
      (value
        (function_call
          (identifier)
          (sequence
            (expression
              (value
                (string)))
            (expression
              (value
                (identifier)))))))))

================================================================================
export
================================================================================

export foo := "abc"

--------------------------------------------------------------------------------

(source_file
  (export
    (assignment
      (identifier)
      (expression
        (value
          (string))))))

================================================================================
import
================================================================================

import 'foo/bar.just'
import? 'baz.just'

--------------------------------------------------------------------------------

(source_file
  (import
    (string))
  (import
    (string)))

================================================================================
modules
================================================================================

mod foo
mod bar 'PATH'
mod? baz
mod? qux "PATH"

--------------------------------------------------------------------------------

(source_file
  (module
    (identifier))
  (module
    (identifier)
    (string))
  (module
    (identifier))
  (module
    (identifier)
    (string)))

================================================================================
set
================================================================================

set SOME_BOOL
set FOO := true
set dotenv-load
set tempdir := "/tmp/just"
set shell := ["powershell.exe", "-c"]

--------------------------------------------------------------------------------

(source_file
  (setting
    (identifier))
  (setting
    (identifier)
    (boolean))
  (setting
    (identifier))
  (setting
    (identifier)
    (string))
  (setting
    (string)
    (string)))

================================================================================
comment
================================================================================

# comment
foo := bar # + baz

--------------------------------------------------------------------------------

(source_file
  (comment)
  (assignment
    (identifier)
    (expression
      (value
        (identifier)))
    (comment)))

================================================================================
shebang
================================================================================

#!/usr/bin/env just

foo:
  body

--------------------------------------------------------------------------------

(source_file
  (shebang)
  (recipe
    (recipe_header
      (identifier))
    (recipe_body
      (recipe_line
        (text)))))
