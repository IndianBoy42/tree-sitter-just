on:
  workflow_dispatch:
  pull_request:
  push:


jobs:
  deno:
    name: Deno format and lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v1
        with:
          deno-version: "~1.39"
      - run: deno lint
      - run: deno fmt --check

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: git tag pre-updates
      - run: npm install --locked
      - name: Create generated files
        shell: bash
        run: |
          npm run gen

          failed=false
          git diff pre-updates --exit-code || failed=true

          if ! [ "$failed" = "false" ]; then
            echo '::warning::Generated files are out of date!'
            echo '::warning::run `npm run gen` and commit the changes'
          fi
      - run: npm test
      - name: Check C files with args
        shell: bash
        run: >
          find src/ -name '*.c' ! -name "parser.c" |
          xargs -IFNAME sh -c
          'echo "\nCHECKING FILE FNAME" &&
          clang FNAME -c -Wall -Werror --pedantic 
          -Wno-format-pedantic
          -o/dev/null'

  static-validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@just
      - name: Verify Just can parse test files
        shell: bash
        run: |
          # skip readme.just because it is broken but works for testing
          find . -type f -iregex '.*[\./]just[^\./]*' |
            grep -v readme.just | while read -r fname
          do
            echo checking "$fname"
            just --list --unstable --justfile "$fname"
          done
      - name: Look for tests that contain errors
        run: "! grep -nr -C4 -E '(ERROR|MISSING|UNEXPECTED)' test"
